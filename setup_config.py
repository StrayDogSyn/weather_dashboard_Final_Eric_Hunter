#!/usr/bin/env python3
"""
Weather Dashboard Configuration Setup

This script helps users set up their API keys and configuration for the Weather Dashboard.
"""

import os
import sys
from pathlib import Path


def create_env_file():
    """Create a .env file with user input for API keys."""
    env_file = Path(".env")
    
    print("🌤️  Weather Dashboard Configuration Setup")
    print("=" * 50)
    print()
    
    if env_file.exists():
        response = input("⚠️  .env file already exists. Overwrite? (y/N): ")
        if response.lower() != 'y':
            print("Setup cancelled.")
            return
    
    print("Please enter your API keys (press Enter to skip optional ones):")
    print()
    
    # Weather API Keys (at least one required)
    print("📡 Weather API Keys (at least one required):")
    openweather_key = input("OpenWeatherMap API Key (https://openweathermap.org/api): ").strip()
    weather_api_key = input("WeatherAPI Key (https://www.weatherapi.com/): ").strip()
    
    if not openweather_key and not weather_api_key:
        print("⚠️  Warning: No weather API keys provided. Weather features will not work.")
        print("You can add them later by editing the .env file.")
    
    print()
    print("🤖 Optional API Keys:")
    gemini_key = input("Google Gemini AI Key (for AI features): ").strip()
    spotify_id = input("Spotify Client ID (for music features): ").strip()
    spotify_secret = input("Spotify Client Secret: ").strip()
    github_token = input("GitHub Token (for collaboration features): ").strip()
    
    print()
    print("⚙️  Application Settings:")
    default_city = input("Default City (default: New York): ").strip() or "New York"
    temp_unit = input("Temperature Unit (fahrenheit/celsius, default: fahrenheit): ").strip() or "fahrenheit"
    
    # Create .env file content
    env_content = f"""# Weather Dashboard API Configuration
# Generated by setup_config.py

# Weather API Keys
OPENWEATHER_API_KEY={openweather_key}
WEATHER_API_KEY={weather_api_key}

# AI Features
GEMINI_API_KEY={gemini_key}

# Music Integration
SPOTIFY_CLIENT_ID={spotify_id}
SPOTIFY_CLIENT_SECRET={spotify_secret}

# Team Collaboration
GITHUB_TOKEN={github_token}

# Application Settings
DEFAULT_CITY={default_city}
TEMPERATURE_UNIT={temp_unit}
WINDOW_WIDTH=1400
WINDOW_HEIGHT=900
"""
    
    # Write .env file
    with open(env_file, 'w') as f:
        f.write(env_content)
    
    print()
    print("✅ Configuration saved to .env file!")
    print()
    
    if openweather_key or weather_api_key:
        print("🎉 Weather API configured! You can now run the application.")
    else:
        print("⚠️  No weather API keys configured. The app will run in demo mode.")
    
    print()
    print("To start the application, run: python main.py")


def create_demo_env():
    """Create a demo .env file for testing without real API keys."""
    env_file = Path(".env")
    
    demo_content = """# Weather Dashboard Demo Configuration
# This is a demo configuration for testing purposes
# Replace with real API keys for full functionality

# Weather API Keys (demo - will use cached/mock data)
OPENWEATHER_API_KEY=demo_key_replace_with_real
WEATHER_API_KEY=

# AI Features (demo)
GEMINI_API_KEY=

# Music Integration (demo)
SPOTIFY_CLIENT_ID=
SPOTIFY_CLIENT_SECRET=

# Team Collaboration (demo)
GITHUB_TOKEN=

# Application Settings
DEFAULT_CITY=New York
TEMPERATURE_UNIT=fahrenheit
WINDOW_WIDTH=1400
WINDOW_HEIGHT=900
"""
    
    with open(env_file, 'w') as f:
        f.write(demo_content)
    
    print("✅ Demo configuration created!")
    print("⚠️  Note: Weather features will use cached data only.")
    print("To add real API keys, run this script again or edit .env manually.")


def main():
    """Main setup function."""
    if len(sys.argv) > 1 and sys.argv[1] == '--demo':
        create_demo_env()
    else:
        create_env_file()


if __name__ == "__main__":
    main()